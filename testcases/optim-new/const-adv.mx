/*
Test Package: Optim
Author: 18' Zonghan YANG
Time: 2021-03-25
Input:
=== input ===

=== end ===
Output:
=== output ===

=== end ===
ExitCode: 0
RunTimeLimit: 300000
OutputLengthLimit: 10000
CompileTimeLimit: 15
*/


int N = 80;

int test() {
    int i, j = 0;
    int u = 1, v = 2;
    for (i = 0; i < 200; i++) {
        if (((1 ^ 2) == 3) && ((1 & 1) == (5 / 3)) && (1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 19 + 20 + 21 + 22 + 23 + 24 + 25 + 26 + 27 + 28 + 29 + 30 + 31 + 32 + 33 + 34 + 35 + 36 + 37 + 38 + 39 + 40 + 41 + 42 + 43 + 44 + 45 + 46 + 47 + 48 + 49 + 50 + 51 + 52 + 53 + 54 + 55 + 56 + 57 + 58 + 59 + 60 + 61 + 62 + 63 + 64 + 65 + 66 + 67 + 68 + 69 + 70 + 71 + 72 + 73 + 74 + 75 + 76 + 77 + 78 + 79 + 80 + 81 + 82 + 83 + 84 + 85 + 86 + 87 + 88 + 89 + 90 + 91 + 92 + 93 + 94 + 95 + 96 + 97 + 98 + 99 + 100 == (100 + 1) * 100 / 2)) {
            int x = u, y = v;
            int z = x + y;
            if (x + y == z) {
                if (y * y * y * y * y * y * y * y * y * y == (x + x + y) * (x + x + y) * (x + x + y) * (x + x + y) * (x + x + y)) {
                    i++; j++;    
                }
            }
        } else {
            j = (1 + 1) / (1 - 1); // sanity check
        }
    }
    return j;
}

int naivedce() {
	int ret = 114514;
	if (false) {
		ret = ret * 234 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ N + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + ret / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 1 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 - 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + ret * 12;
		ret = ret + 11;
		ret = 1 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5;	
		ret = ret * 234 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ N + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + ret / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 1 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 - 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + ret * 12;
		ret = ret + 11;
		ret = 1 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5;	
	}
	ret = ret + ret + ret + ret;
	ret = 0;
	int aa = ret + 1; // = 1
	int bb = aa + 1; // = 2
	int cc = bb * 2;
	int dd = cc - 100000;
	
	int i, sum = 0, prod = 1;
	for (i = 1; i <= 100; i++) sum = sum + i;
	for ( ; i >= 1; i--) sum = sum + i; // avoid hack
	for (i++; i <= 10; i++) prod = prod * i;

	if (aa != cc) if (aa != dd) if (aa + cc == cc + aa) if (aa == aa) if (aa == aa) if (dd == dd) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (dd == dd) 
	if (aa != cc) if (aa != dd) if (aa + cc == cc + aa) if (aa == aa) if (aa == aa) if (dd == dd) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (dd == dd) 
	if (aa != cc) if (aa != dd) if (aa + cc == cc + aa) if (aa == aa) if (aa == aa) if (dd == dd) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (dd == dd) 
	if (aa != cc) if (aa != dd) if (aa + cc == cc + aa) if (aa == aa) if (aa == aa) if (dd == dd) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (dd == dd) 
	if (sum == 5050 * 2) if (sum == 5050 * 2) if (sum == 5050 * 2) if (sum == 5050 * 2) if (sum == 5050 * 2) if (sum == 5050 * 2) if (sum == 5050 * 2) if (sum == 5050 * 2)
	if (aa != cc) if (aa != dd) if (aa + cc == cc + aa) if (aa == aa) if (aa == aa) if (dd == dd) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (dd == dd) 
	if (aa != cc) if (aa != dd) if (aa + cc == cc + aa) if (aa == aa) if (aa == aa) if (dd == dd) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (dd == dd) 
	if (sum == 5050 * 2) if (sum == 5050 * 2) if (sum == 5050 * 2) if (sum == 5050 * 2) if (sum == 5050 * 2) if (sum == 5050 * 2) if (sum == 5050 * 2) if (sum == 5050 * 2)
	if (sum == 5050 * 2) if (sum == 5050 * 2) if (sum == 5050 * 2) if (sum == 5050 * 2) if (sum == 5050 * 2) if (sum == 5050 * 2) if (sum == 5050 * 2) if (sum == 5050 * 2)
	if (sum == 5050 * 2) if (sum == 5050 * 2) if (sum == 5050 * 2) if (sum == 5050 * 2) if (sum == 5050 * 2) if (sum == 5050 * 2) if (sum == 5050 * 2) if (sum == 5050 * 2)
	if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (dd == dd) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (dd == dd) 
	if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (dd == dd) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (dd == dd) 
	if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (dd == dd) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (dd == dd) 
	if (prod == 3628800)
	if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (dd == dd) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (dd == dd) 
	if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (dd == dd) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (dd == dd) 
	if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (dd == dd) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (dd == dd) 
	if (sum == 5050 * 2)
	if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (dd == dd) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (dd == dd) 
    if (prod == 3628800)
	{
		if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (dd == dd) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (dd == dd) 
		if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (dd == dd) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (aa == aa) if (dd == dd) 
			dd --;
		prod ++;
	}
	return 1919;
}

int dceconst() {
	int i, j, k, sum = 114514, ret;
	for (i = 0; i < N; i++) {
		for (j = 0; j < N; j++) {
			int a = i + j;
			int b = i - j;
			int c = i + j - i;
			c = c * c;
			c = c / N;
		}
	}
	for (i = 0; i < N; i++) {
		ret = ret * 234 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ N + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + ret / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 1 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 - 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + 42342 * 12 + 111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10111 + 4 / 5 * 6 + 7 + 8 / 9 * 10 ^ 12211342 + ret * 12;
		ret = ret + 11;
		ret = 1 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5 / 5;
	}
	return sum;
}
int main() {
    return test() + naivedce() + dceconst() - 50997;
}
